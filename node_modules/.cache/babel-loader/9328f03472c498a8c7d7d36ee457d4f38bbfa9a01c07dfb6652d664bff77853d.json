{"ast":null,"code":"import axios from 'axios';\nconst PAYSTACK_SECRET_KEY = process.env.REACT_APP_PAYSTACK_SECRET_KEY;\nexport const initiatePayment = async data => {\n  try {\n    console.log('Initiating payment with data:', data);\n    const response = await axios.post('https://x8ki-letl-twmt.n7.xano.io/api:2T4UiE5R/paystack_charge', {\n      email: data.email,\n      provider: data.provider,\n      phone: data.phone\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('Payment initiation response:', response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2, _error$response3, _error$response3$data;\n    console.error('Payment initiation error:', {\n      message: error.message,\n      response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n      status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n      config: error.config\n    });\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Payment initiation failed');\n  }\n};\nexport const submitOtp = async (otp, reference) => {\n  try {\n    console.log('Submitting OTP:', {\n      otp,\n      reference\n    });\n    const response = await axios.post('https://x8ki-letl-twmt.n7.xano.io/api:2T4UiE5R/charge_otp', {\n      otp,\n      reference\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('OTP submission response:', response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response5, _error$response6, _error$response6$data;\n    console.error('OTP submission error:', {\n      message: error.message,\n      response: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data,\n      status: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status\n    });\n    throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'OTP verification failed');\n  }\n};\nexport const verifyPayment = async reference => {\n  try {\n    console.log('Verifying payment with reference:', reference);\n    const response = await axios.post('https://x8ki-letl-twmt.n7.xano.io/api:2T4UiE5R/verify', {\n      reference\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('Payment verification response:', response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response7, _error$response8, _error$response9, _error$response9$data;\n    console.error('Payment verification error:', {\n      message: error.message,\n      response: (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data,\n      status: (_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.status\n    });\n    throw new Error(((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || 'Payment verification failed');\n  }\n};","map":{"version":3,"names":["axios","PAYSTACK_SECRET_KEY","process","env","REACT_APP_PAYSTACK_SECRET_KEY","initiatePayment","data","console","log","response","post","email","provider","phone","headers","error","_error$response","_error$response2","_error$response3","_error$response3$data","message","status","config","Error","submitOtp","otp","reference","_error$response4","_error$response5","_error$response6","_error$response6$data","verifyPayment","_error$response7","_error$response8","_error$response9","_error$response9$data"],"sources":["/Users/dibelaba/Documents/GitHub/KBF/src/services/payment.js"],"sourcesContent":["import axios from 'axios';\n\nconst PAYSTACK_SECRET_KEY = process.env.REACT_APP_PAYSTACK_SECRET_KEY;\n\nexport const initiatePayment = async (data) => {\n  try {\n    console.log('Initiating payment with data:', data);\n    \n    const response = await axios.post(\n      'https://x8ki-letl-twmt.n7.xano.io/api:2T4UiE5R/paystack_charge',\n      {\n        email: data.email,\n        provider: data.provider,\n        phone: data.phone\n      },\n      {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n\n    console.log('Payment initiation response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Payment initiation error:', {\n      message: error.message,\n      response: error.response?.data,\n      status: error.response?.status,\n      config: error.config\n    });\n    throw new Error(error.response?.data?.message || 'Payment initiation failed');\n  }\n};\n\nexport const submitOtp = async (otp, reference) => {\n  try {\n    console.log('Submitting OTP:', { otp, reference });\n    \n    const response = await axios.post(\n      'https://x8ki-letl-twmt.n7.xano.io/api:2T4UiE5R/charge_otp',\n      {\n        otp,\n        reference\n      },\n      {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n\n    console.log('OTP submission response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('OTP submission error:', {\n      message: error.message,\n      response: error.response?.data,\n      status: error.response?.status\n    });\n    throw new Error(error.response?.data?.message || 'OTP verification failed');\n  }\n};\n\nexport const verifyPayment = async (reference) => {\n  try {\n    console.log('Verifying payment with reference:', reference);\n    \n    const response = await axios.post(\n      'https://x8ki-letl-twmt.n7.xano.io/api:2T4UiE5R/verify',\n      {\n        reference\n      },\n      {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n\n    console.log('Payment verification response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Payment verification error:', {\n      message: error.message,\n      response: error.response?.data,\n      status: error.response?.status\n    });\n    throw new Error(error.response?.data?.message || 'Payment verification failed');\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
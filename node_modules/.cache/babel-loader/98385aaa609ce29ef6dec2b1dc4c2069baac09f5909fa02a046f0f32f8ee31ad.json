{"ast":null,"code":"import axios from 'axios';\nconst PAYSTACK_SECRET_KEY = process.env.REACT_APP_PAYSTACK_SECRET_KEY;\nexport const initiatePayment = async paymentData => {\n  try {\n    console.log('Initiating payment with data:', paymentData);\n    const response = await axios.get('https://x8ki-letl-twmt.n7.xano.io/api:2T4UiE5R/paystack_charge', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      params: {\n        email: paymentData.email,\n        provider: paymentData.provider,\n        phone: paymentData.phone\n      }\n    });\n    return response.resultdata;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error('Payment initiation error:', error);\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Payment initiation failed');\n  }\n};\nexport const submitOtp = async (otp, reference) => {\n  try {\n    console.log('Submitting OTP:', {\n      otp,\n      reference\n    });\n    const response = await axios.get('https://x8ki-letl-twmt.n7.xano.io/api:2T4UiE5R/charge_otp', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: {\n        otp,\n        reference\n      }\n    });\n    console.log('OTP submission response:', response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.error('OTP submission error:', error);\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'OTP verification failed');\n  }\n};\nexport const verifyPayment = async reference => {\n  try {\n    console.log('Verifying payment with reference:', reference);\n    const response = await axios.get('https://x8ki-letl-twmt.n7.xano.io/api:2T4UiE5R/verify', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      params: {\n        reference\n      }\n    });\n    console.log('Payment verification response:', response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    console.error('Payment verification error:', error);\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Payment verification failed');\n  }\n};","map":{"version":3,"names":["axios","PAYSTACK_SECRET_KEY","process","env","REACT_APP_PAYSTACK_SECRET_KEY","initiatePayment","paymentData","console","log","response","get","headers","params","email","provider","phone","resultdata","error","_error$response","_error$response$data","Error","data","message","submitOtp","otp","reference","_error$response2","_error$response2$data","verifyPayment","_error$response3","_error$response3$data"],"sources":["/Users/dibelaba/Documents/GitHub/KBF/src/services/payment.js"],"sourcesContent":["import axios from 'axios';\n\nconst PAYSTACK_SECRET_KEY = process.env.REACT_APP_PAYSTACK_SECRET_KEY;\n\nexport const initiatePayment = async (paymentData) => {\n  try {\n    console.log('Initiating payment with data:', paymentData);\n    \n    const response = await axios.get(\n      'https://x8ki-letl-twmt.n7.xano.io/api:2T4UiE5R/paystack_charge',\n      {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        params: {\n          email: paymentData.email,\n          provider: paymentData.provider,\n          phone: paymentData.phone\n        }\n      }\n    );\n\n    return response.resultdata;\n  } catch (error) {\n    console.error('Payment initiation error:', error);\n    throw new Error(error.response?.data?.message || 'Payment initiation failed');\n  }\n};\n\nexport const submitOtp = async (otp, reference) => {\n  try {\n    console.log('Submitting OTP:', { otp, reference });\n    \n    const response = await axios.get(\n      'https://x8ki-letl-twmt.n7.xano.io/api:2T4UiE5R/charge_otp',\n      {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: {\n          otp,\n          reference\n        }\n      }\n    );\n\n    console.log('OTP submission response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('OTP submission error:', error);\n    throw new Error(error.response?.data?.message || 'OTP verification failed');\n  }\n};\n\nexport const verifyPayment = async (reference) => {\n  try {\n    console.log('Verifying payment with reference:', reference);\n    \n    const response = await axios.get(\n      'https://x8ki-letl-twmt.n7.xano.io/api:2T4UiE5R/verify',\n      {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        params: {\n          reference\n        }\n      }\n    );\n\n    console.log('Payment verification response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Payment verification error:', error);\n    throw new Error(error.response?.data?.message || 'Payment verification failed');\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}